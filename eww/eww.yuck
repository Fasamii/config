;; Variables
(defvar show_bar true)

(defpoll time_hour :interval "1s" "date +%H")
(defpoll time_minute :interval "1s" "date +%M") 
(defpoll time_second :interval "1s" "date +%S")
(defpoll volume-level :interval "200ms" "pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}' | tr -d '%'")
(defpoll battery-level :interval "10s" "cat /sys/class/power_supply/BAT0/capacity")

(defpoll song_title :interval "1s" 
	"playerctl -p spotify,vlc,firefox,%any metadata title 2>/dev/null | tr '[:lower:]' '[:upper:]' | fold -w1 | head -28 || echo ''"
)

(defpoll song_position :interval "500ms" 
	"playerctl -p spotify,vlc,firefox,%any position 2>/dev/null | cut -d. -f1 | xargs printf '%03d' || echo '000'"
)

(defpoll song_length :interval "2s" 
	"playerctl -p spotify,vlc,firefox,%any metadata mpris:length 2>/dev/null | awk '{printf \"%03d\", int($1/1000000)}' || echo '000'"
)

(defwidget time []
	(box :class "time-container"
	     :orientation "v"
	     :space-evenly false
	     :spacing 2
		(label :text time_hour)
		(label :text time_minute)
		(label :text time_second)
	)
)

(defwidget volume []
	(box :class "volume-box"
	     :halign "center"
	     :valign "center"
		(progress :class "vol-bar"
			    :haligh "center"
			    :valign "center"
			    :orientation "v"
			    :flipped true
			    :height 120
			    :max 100
			    :min 0
			    :value volume-level
		)
	)
)

;; Song info widget  
(defwidget song []
	(box :class "song-container"
	     :orientation "v" 
	     :space-evenly false
	     :spacing 4
	     :haligh "center"
	     :valign "center"
		(label :text {song_title != "" ? song_title : "No Song"}
			 :limit-width 20
			 :wrap false)
		(box :class "song-timing"
		     :orientation "v"
		     :space-evenly false
		     :halign "center"
		     :valign "center"
		     :style "padding-top: 4px"
			(circular-progress :thickness 7
						 :style "color: #ffffff; background-color: #333333;"
						 :value "${song_length > 0 ? (song_position * 100 / song_length) : 0}"
			)
		)
	)
)

(defwidget bat []
	(box :class "battery-box"
		(circular-progress :thickness 7
					 :style "color: #ffffff; background-color: #333333;"
					 :value battery-level
		)
	)
)

;; Main bar widget
(defwidget bar []
	(box :class "main-bar"
	     :orientation "v"
	     :space-evenly false
	     :spacing 12
		(box :orientation "v"
			:visible {battery-level <= 80}
			(bat)
		)
		(time)
		(box :expand true :vexpand true)
		(volume)
		(box :expand true :vexpand true)
		(box :orientation "v"
		     :visible {song_title != ""}
			(song)
		)
	)
)

;; Window definition
(defwindow bar :monitor 0
		   :geometry (geometry :x "0px"
				           :y "0px" 
					     :width "24px"
					     :height "100%"
					     :anchor "right center"
				 )
		   :stacking "fg"
		   :reserve (struts :distance "40px" :side "right")
		   :windowtype "dock"
		   :wm-ignore false
		   :exclusive true
		   :layer "top"
	(bar)
)
